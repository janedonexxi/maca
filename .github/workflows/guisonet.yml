name: Windows VNC Desktop (Web Access) 
on:
  workflow_dispatch:
    inputs:
      vnc_password:
        description: 'VNC şifreniz'
        required: true
        default: 'github'
        type: string

jobs:
  windows-desktop:
    runs-on: windows-latest
    timeout-minutes: 350

    steps:
      - name: 1. Ortamı ve Uygulamaları Yükle
        run: |
          Write-Host "📦 Chocolatey ile uygulamalar yükleniyor..." -ForegroundColor Green
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          choco install tightvnc googlechrome firefox vscode cloudflared -y

      - name: 2. TightVNC Sunucusunu Yapılandır ve Başlat
        run: |
          Write-Host "🔧 VNC Sunucusu yapılandırılıyor..." -ForegroundColor Cyan
          
          # VNC şifresini ve diğer ayarları registry'e yaz. Bu en güvenilir yöntemdir.
          $regPath = "HKLM:\SOFTWARE\TightVNC\Server"
          New-Item -Path $regPath -Force | Out-Null
          Set-ItemProperty -Path $regPath -Name "Password" -Value (echo "${{ github.event.inputs.vnc_password }}" | C:\"Program Files"\TightVNC\vncpasswd.exe -e)
          Set-ItemProperty -Path $regPath -Name "PasswordViewOnly" -Value (echo "${{ github.event.inputs.vnc_password }}" | C:\"Program Files"\TightVNC\vncpasswd.exe -e)
          Set-ItemProperty -Path $regPath -Name "UseVncAuthentication" -Value 1
          Set-ItemProperty -Path $regPath -Name "AcceptHttpConnections" -Value 0 # noVNC kullanacağımız için dahili web sunucusuna gerek yok
          Set-ItemProperty -Path $regPath -Name "RfbPort" -Value 5900
          
          # VNC Servisini yeniden başlatarak ayarların geçerli olmasını sağla
          Restart-Service -Name "tvnserver" -Force
          Write-Host "✅ VNC Sunucusu 5900 portunda başlatıldı." -ForegroundColor Green

      - name: 3. noVNC Web Arayüzünü Ayarla
        run: |
          Write-Host "🌐 noVNC ve Websocket proxy ayarlanıyor..." -ForegroundColor Cyan
          
          # Gerekli Python paketini ve noVNC'yi indir
          pip install websockify
          git clone https://github.com/novnc/noVNC.git C:\noVNC
          
          # noVNC'yi arkaplanda çalıştırmak için PowerShell'in 'Start-Job' özelliğini kullan.
          # Bu, ayrı bir .bat dosyası oluşturmaktan daha temizdir.
          $ScriptBlock = {
              & python -m websockify --web C:\noVNC 6080 localhost:5900
          }
          Start-Job -ScriptBlock $ScriptBlock
          
          Start-Sleep -Seconds 5
          Write-Host "✅ noVNC web arayüzü 6080 portunda hazır." -ForegroundColor Green

      - name: 4. Herkese Açık Erişim Tüneli Oluştur (Cloudflare)
        run: |
          Write-Host "🚀 Cloudflare Tunnel ile genel erişim sağlanıyor..." -ForegroundColor Cyan
          
          # Cloudflare tünelini başlat ve logları bir dosyaya yaz
          Start-Process -FilePath "cloudflared.exe" -ArgumentList "tunnel --url http://localhost:6080 --no-autoupdate" -RedirectStandardOutput "C:\cf.log" -RedirectStandardError "C:\cf.log" -NoNewWindow
          
          # Tünelin oluşmasını ve URL'nin log dosyasına yazılmasını bekle
          Write-Host "URL'nin oluşması için 20 saniye bekleniyor..."
          Start-Sleep -Seconds 20
          
          # Log dosyasından tünel URL'sini al
          $cf_url = Get-Content C:\cf.log | Select-String -Pattern "https://.*trycloudflare.com" | ForEach-Object { $_.Matches[0].Value } | Select-Object -First 1
          
          if ($cf_url) {
              echo "CLOUDFLARE_URL=$cf_url" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
              Write-Host "✅ Cloudflare Tüneli Hazır!" -ForegroundColor Green
          } else {
              Write-Host "❌ HATA: Cloudflare tünel URL'si alınamadı. Loglar:" -ForegroundColor Red
              Get-Content C:\cf.log
              exit 1
          }

      - name: 5. Erişim Bilgilerini Görüntüle
        run: |
          echo "===================================================================="
          echo "🎉 Windows VNC Masaüstünüz Hazır!"
          echo "===================================================================="
          echo ""
          echo "🌐 Web Tarayıcınızdan Bağlanın:"
          echo "   Masaüstü: ${{ env.CLOUDFLARE_URL }}"
          echo ""
          echo "🔐 VNC Şifreniz: ${{ github.event.inputs.vnc_password }}"
          echo ""
          echo "💡 Not: Sayfa açıldığında noVNC arayüzünde 'Connect' butonuna basın ve şifrenizi girin."
          echo "===================================================================="
        
      - name: 6. Oturumu Açık Tut
        run: |
          Write-Host "⏰ Oturum yaklaşık 6 saat boyunca açık kalacak." -ForegroundColor Green
          while ($true) {
            Start-Sleep -Seconds 60
          }
