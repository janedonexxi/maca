name: macOS VNC Desktop (Alternative)
on:
  workflow_dispatch:
    inputs:
      vnc_password:
        description: 'VNC şifreniz (en fazla 8 karakter)'
        required: true
        default: 'github'
        type: string

jobs:
  macos-desktop:
    runs-on: macos-latest
    timeout-minutes: 350

    steps:
      - name: 1. Ortamı Hazırla
        run: |
          echo "✅ Ortam hazırlanıyor..."
          # X11 ve sanal masaüstü için gerekli araçlar
          brew install --cask xquartz
          brew install tigervnc fluxbox
          
          # Diğer araçlar
          brew install --cask firefox visual-studio-code
          brew install cloudflared ttyd nginx

      - name: 2. TigerVNC Sunucusunu Kur
        run: |
          echo "🐅 TigerVNC sunucusu ve sanal masaüstü kuruluyor..."
          
          # VNC şifre dosyasını oluştur
          echo "${{ github.event.inputs.vnc_password }}" | vncpasswd -f > ~/.vnc/passwd
          chmod 600 ~/.vnc/passwd
          
          # VNC başlangıç betiğini oluştur (Fluxbox masaüstünü başlatacak)
          cat > ~/.vnc/xstartup << 'EOF'
          #!/bin/sh
          unset SESSION_MANAGER
          unset DBUS_SESSION_BUS_ADDRESS
          export XKL_XMODMAP_DISABLE=1
          [ -x /etc/vnc/xstartup ] && exec /etc/vnc/xstartup
          [ -r $HOME/.Xresources ] && xrdb $HOME/.Xresources
          xsetroot -solid grey
          vncconfig -iconic &
          exec fluxbox
          EOF
          chmod +x ~/.vnc/xstartup
          
          # VNC sunucusunu başlat (Port 5901)
          vncserver :1 -geometry 1920x1080 -depth 24 -localhost no
          sleep 5

      - name: 3. noVNC Web Arayüzünü ve Proxy'yi Ayarla
        run: |
          echo "🌐 noVNC ve Web Proxy ayarları yapılıyor..."
          git clone https://github.com/novnc/noVNC.git /tmp/noVNC
          
          # noVNC'yi TigerVNC portuna (5901) bağla
          /tmp/noVNC/utils/novnc_proxy --vnc localhost:5901 --listen 6080 > /tmp/novnc.log 2>&1 &
          ttyd --port 8080 bash > /tmp/ttyd.log 2>&1 &
          
          cat > /tmp/nginx.conf << 'END'
          events {}
          http {
              server {
                  listen 8090;
                  location / {
                      proxy_pass http://127.0.0.1:6080/;
                      proxy_http_version 1.1;
                      proxy_set_header Upgrade $http_upgrade;
                      proxy_set_header Connection "upgrade";
                  }
                  location /terminal {
                      proxy_pass http://127.0.0.1:8080/;
                      proxy_http_version 1.1;
                      proxy_set_header Upgrade $http_upgrade;
                      proxy_set_header Connection "upgrade";
                  }
              }
          }
          END
          
          nginx -c /tmp/nginx.conf
          echo "✅ Web servisleri (noVNC, ttyd, Nginx) çalışıyor."

      - name: 4. Herkese Açık Erişim Tüneli Oluştur (Cloudflare)
        run: |
          echo "🚀 Cloudflare Tunnel ile genel erişim sağlanıyor..."
          cloudflared tunnel --url http://localhost:8090 > /tmp/cloudflared.log 2>&1 &
          sleep 15
          
          CF_URL=$(grep -o 'https://[^[:space:]]*.trycloudflare.com' /tmp/cloudflared.log | head -n 1)
          if [ -z "$CF_URL" ]; then
            echo "❌ HATA: Cloudflare tünel URL'si alınamadı."
            cat /tmp/cloudflared.log
            exit 1
          fi
          
          echo "CLOUDFLARE_URL=${CF_URL}" >> $GITHUB_ENV
          echo "✅ Cloudflare Tüneli hazır."

      - name: 5. Erişim Bilgilerini Görüntüle
        run: |
          echo "===================================================================="
          echo "🎉 macOS VNC Masaüstünüz Hazır! (TigerVNC + Fluxbox)"
          echo "===================================================================="
          echo "🌐 Web Tarayıcınızdan Bağlanın:"
          echo "   Masaüstü: ${{ env.CLOUDFLARE_URL }}"
          echo "   Terminal: ${{ env.CLOUDFLARE_URL }}/terminal"
          echo "🔐 VNC Şifreniz: ${{ github.event.inputs.vnc_password }}"
          echo "⚠️ Not: Bu gerçek macOS arayüzü değil, basit bir sanal masaüstüdür."
          echo "===================================================================="
          
      - name: 6. Oturumu Açık Tut
        run: |
          echo "⏰ Oturum yaklaşık 6 saat boyunca açık kalacak."
          tail -f /dev/null
